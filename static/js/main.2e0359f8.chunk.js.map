{"version":3,"sources":["components/shared/input-field/InputField.jsx","components/shared/button/Button.jsx","api/_DATA.js","state/actions/loader.js","state/actions/users.js","state/actions/auth.js","components/login/Login.jsx","components/navigation/nav-toggle/NavToggle.jsx","components/navigation/Navigation.jsx","state/actions/questions.js","components/home/question-preview/QuestionPreview.jsx","components/home/question-preview-list/QuestionPreviewList.jsx","components/home/lists-toggle/ListsToggle.jsx","components/home/Home.jsx","utils/key-utils.js","components/add-question/question-option/QuestionOption.jsx","components/add-question/question-form/QuestionForm.jsx","components/add-question/question-title/QuestionTitle.jsx","components/add-question/AddQuestion.jsx","components/icons-credit/IconsCredit.jsx","components/leaderboard/leaderboard-table/LeaderboardTable.jsx","components/leaderboard/Leaderboard.jsx","components/App.js","components/shared/loader/Loader.jsx","state/reducers/auth.js","state/reducers/loader.js","state/reducers/questions.js","state/reducers/users.js","state/reducers/index.js","state/middlewares/logger.js","state/middlewares/index.js","index.js"],"names":["InputField","getInputProps","inputProps","Object","objectSpread","_this","props","saveRef","id","label","_this$props","this","react_default","a","createElement","className","assign","ref","htmlFor","Component","Button","name","timeout","users","sarahedo","avatarURL","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","_ref","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","defineProperty","concat","LoaderActionCreator","type","LoaderActionType","LoaderAction","UserActionType","UserActionCreator","user","payload","username","questionId","option","UserAction","dispatch","then","catch","error","console","warn","AuthActionCreator","AuthActionType","AuthAction","password","resolve","reject","message","API","response","LoginHeader","LoginResult","auth","Login","state","updateField","event","field","setState","target","value","handleFormSubmit","preventDefault","_this$state","login","passwordInput","focus","select","fieldsAreEmpty","_this$state2","trim","_this2","_this$state3","autoComplete","onSubmit","Login_LoginHeader","Login_LoginResult","input_field_InputField","onChange","button_Button","disabled","connect","NavToggle","toggle","onClick","Navigation","visibleOnSmallBreakpoint","toggleMenuVisibility","hideMenu","logout","history","push","navClassName","nav_toggle_NavToggle","NavLink","exact","to","withRouter","QuestionActionCreator","QuestionActionType","QuestionAction","questionInfo","_ref2","qid","answer","alert","QuestionText","QuestionButton","answerQuestion","QuestionOption","_ref3","allowToAnswer","onSelected","optionClassName","QuestionPreview_QuestionButton","QuestionPreview_QuestionText","QuestionPreview_QuestionOption","loading","loader","title","zeroItemsMessage","length","map","key","question_preview_QuestionPreview","ToggleButton","condition","selectedCodition","ListsToggle","showBothLists","showUnansweredList","showAnsweredList","unanswerdListVisible","answerdListVisible","ListsToggle_ToggleButton","Home","unansweredQuestions","answeredQuestions","lists_toggle_ListsToggle","question_preview_list_QuestionPreviewList","sortDescByTimestamp","question1","question2","values","list","keys","filter","indexOf","sort","enterWasPressed","keyCode","handleEnter","gainFocusIfShould","focused","input","placeholder","updateValue","onKeyDown","QuestionForm","focusOne","focusTwo","giveFocusToOptionTwo","updateOptionValue","_this$setState","handleSubmit","bothOptionsWereFilled","addQuestion","optionOneNonEmpty","optionTwoNonEmpty","question_option_QuestionOption","QuestionTitle","AddQuestion","question_title_QuestionTitle","question_form_QuestionForm","IconsCredit","href","rel","UserAvatar","src","alt","LeaderboardTable","index","LeaderboardTable_UserAvatar","Leaderboard","shouldFetchUsers","fetchAllUsers","react","leaderboard_table_LeaderboardTable","icons_credit_IconsCredit","score","user1","user2","allUsersRequested","App","fetchAllQuestions","logged","BrowserRouter","basename","navigation_Navigation","Route","path","component","login_Login","show","react_loader_spinner_default","color","height","width","loginSuccess","action","time","loginFail","authReducer","arguments","undefined","loaderReducer","saveAllQuestions","_action$payload","selectedOption","toConsumableArray","unanswerQuestion","_action$payload2","vote","questionsReducer","initialUsersState","saveUser","saveUserQuestion","saveUserAnswer","unsaveUserAnswer","_action$payload3","saveAllUsers","usersReducer","combineReducers","logger","store","next","group","log","result","getState","groupEnd","applyMiddleware","thunk","createStore","reducers","middlewares","ReactDOM","render","es","loader_Loader","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2e0359f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './input-field.scss';\r\n\r\nclass InputField extends Component {\r\n  getInputProps = () => {\r\n    const inputProps = { ...this.props };\r\n    delete inputProps.saveRef;\r\n    delete inputProps.id;\r\n    delete inputProps.label;\r\n    return inputProps;\r\n  };\r\n\r\n  render() {\r\n    const { id, label, saveRef } = this.props;\r\n    const inputProps = this.getInputProps();\r\n    return (\r\n      <div className=\"input-field\">\r\n        <input {...inputProps} ref={saveRef} />\r\n        <label htmlFor={id}>{label}</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\nimport './button.scss';\r\n\r\nconst Button = props => {\r\n  const className = props.className ? ' ' + props.className : '';\r\n  return (\r\n    <button\r\n      {...props}\r\n      className={'btn waves-effect waves-light' + className}\r\n      name=\"action\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const timeout = 1;\r\n\r\nlet users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: '../../images/girl-0.png',\r\n    answers: {\r\n      '8xf0y6ziyjabvozdd253nd': 'optionOne',\r\n      '6ni6ok3ym7mf1p33lnez': 'optionOne',\r\n      am8ehyc8byjqgar0jgpub9: 'optionTwo',\r\n      loxhs1bqm25b708cmbf3g: 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: '../../images/man-0.png',\r\n    answers: {\r\n      vthrdm985a262al8qx3do: 'optionOne',\r\n      xj352vofupe1dqz9emx13r: 'optionTwo'\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do']\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: '../../images/man-1.png',\r\n    answers: {\r\n      xj352vofupe1dqz9emx13r: 'optionOne',\r\n      vthrdm985a262al8qx3do: 'optionTwo',\r\n      '6ni6ok3ym7mf1p33lnez': 'optionOne'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r']\r\n  }\r\n};\r\n\r\nlet questions = {\r\n  '8xf0y6ziyjabvozdd253nd': {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory'\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  '6ni6ok3ym7mf1p33lnez': {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero'\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillian'\r\n    }\r\n  },\r\n  am8ehyc8byjqgar0jgpub9: {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic'\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  loxhs1bqm25b708cmbf3g: {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer'\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  vthrdm985a262al8qx3do: {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself'\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  xj352vofupe1dqz9emx13r: {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript'\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  }\r\n};\r\n\r\nfunction generateUID() {\r\n  return (\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15) +\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15)\r\n  );\r\n}\r\n\r\nexport function _getUsers() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...users }), timeout);\r\n  });\r\n}\r\n\r\nexport function _login(username, password) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const user = users[username];\r\n      if (user) {\r\n        resolve({ user });\r\n      } else {\r\n        reject({ message: 'Username or password invalid' });\r\n      }\r\n    }, timeout);\r\n  });\r\n}\r\n\r\nexport function _getQuestions() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...questions }), timeout);\r\n  });\r\n}\r\n\r\nexport function _getQuestion(id) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const question = questions[id];\r\n      if (question) {\r\n        resolve({ question });\r\n      } else {\r\n        reject({ message: 'Question not found' });\r\n      }\r\n    }, timeout);\r\n  });\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText\r\n    }\r\n  };\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      };\r\n\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      };\r\n\r\n      res(formattedQuestion);\r\n    }, timeout);\r\n  });\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      };\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      };\r\n\r\n      res();\r\n    }, timeout);\r\n  });\r\n}\r\n","const SHOW_LOADER = 'SHOW_LOADER';\r\nconst HIDE_LOADER = 'HIDE_LOADER';\r\n\r\nconst LoaderActionCreator = {\r\n  showLoader: () => ({\r\n    type: SHOW_LOADER\r\n  }),\r\n\r\n  hideLoader: () => ({\r\n    type: HIDE_LOADER\r\n  })\r\n};\r\n\r\nexport const LoaderActionType = {\r\n  SHOW_LOADER,\r\n  HIDE_LOADER\r\n};\r\n\r\nexport const LoaderAction = {\r\n  showLoader: () => LoaderActionCreator.showLoader(),\r\n  hideLoader: () => LoaderActionCreator.hideLoader()\r\n};\r\n","import * as API from './../../api/_DATA';\r\nimport { LoaderAction } from './loader';\r\n\r\nconst SAVE_USER = 'SAVE_USER';\r\nconst SAVE_USER_QUESTION = 'SAVE_USER_QUESTION';\r\nconst SAVE_USER_ANSWER = 'SAVE_USER_ANSWER';\r\nconst UNSAVE_USER_ANSWER = 'UNSAVE_USER_ANSWER';\r\nconst SAVE_ALL_USERS = 'SAVE_ALL_USERS';\r\n\r\nexport const UserActionType = {\r\n  SAVE_USER,\r\n  SAVE_USER_QUESTION,\r\n  SAVE_USER_ANSWER,\r\n  UNSAVE_USER_ANSWER,\r\n  SAVE_ALL_USERS\r\n};\r\n\r\nexport const UserActionCreator = {\r\n  saveUser: user => ({\r\n    type: SAVE_USER,\r\n    payload: user\r\n  }),\r\n\r\n  saveUserQuestion: (username, questionId) => ({\r\n    type: SAVE_USER_QUESTION,\r\n    payload: {\r\n      username,\r\n      questionId\r\n    }\r\n  }),\r\n\r\n  saveUserAnswer: (username, questionId, option) => ({\r\n    type: SAVE_USER_ANSWER,\r\n    payload: {\r\n      username,\r\n      questionId,\r\n      option\r\n    }\r\n  }),\r\n\r\n  unsaveUserAnswer: (username, questionId) => ({\r\n    type: UNSAVE_USER_ANSWER,\r\n    payload: {\r\n      username,\r\n      questionId\r\n    }\r\n  }),\r\n\r\n  saveAllUsers: users => ({\r\n    type: SAVE_ALL_USERS,\r\n    payload: users\r\n  })\r\n};\r\n\r\nconst fetchAllUsers = () => dispatch => {\r\n  dispatch(LoaderAction.showLoader());\r\n  return API._getUsers()\r\n    .then(users => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      dispatch(UserActionCreator.saveAllUsers(users));\r\n    })\r\n    .catch(error => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      console.warn('Error fetching all users:', error);\r\n    });\r\n};\r\n\r\nexport const UserAction = {\r\n  fetchAllUsers\r\n};\r\n","import * as API from './../../api/_DATA';\r\nimport { LoaderAction } from './loader';\r\nimport { UserActionCreator } from './users';\r\n\r\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nconst LOGIN_FAIL = 'LOGIN_FAIL';\r\nconst LOGOUT = 'LOGOUT';\r\n\r\nconst AuthActionCreator = {\r\n  loginSuccess: username => ({\r\n    type: LOGIN_SUCCESS,\r\n    payload: username\r\n  }),\r\n\r\n  loginFail: error => ({\r\n    type: LOGIN_FAIL,\r\n    payload: error\r\n  }),\r\n\r\n  logout: () => ({\r\n    type: LOGOUT\r\n  })\r\n};\r\n\r\nconst login = (username, password) => dispatch => {\r\n  dispatch(LoaderAction.showLoader());\r\n  return API._login(username, password)\r\n    .then(response => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      dispatch(UserActionCreator.saveUser(response.user));\r\n      dispatch(AuthActionCreator.loginSuccess(response.user.id));\r\n    })\r\n    .catch(error => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      dispatch(AuthActionCreator.loginFail(error.message));\r\n    });\r\n};\r\n\r\nconst logout = () => dispatch => dispatch(AuthActionCreator.logout());\r\n\r\nexport const AuthActionType = {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n};\r\n\r\nexport const AuthAction = {\r\n  login,\r\n  logout\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport InputField from '../shared/input-field/InputField';\r\nimport Button from '../shared/button/Button';\r\nimport { AuthAction } from '../../state/actions/auth';\r\n\r\nimport './login.scss';\r\n\r\nconst LoginHeader = () => (\r\n  <header className=\"content content--red\">\r\n    <h1>Login area</h1>\r\n  </header>\r\n);\r\n\r\nconst LoginResult = ({ auth }) => {\r\n  if (!auth.error) {\r\n    return null;\r\n  }\r\n  return <p className=\"login__result\">{auth.error}</p>;\r\n};\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: 'johndoe',\r\n    password: 'johndoe'\r\n  };\r\n\r\n  updateField = (event, field) => {\r\n    this.setState({\r\n      [field]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n    this.props.login(username, password);\r\n    this.passwordInput.focus();\r\n    this.passwordInput.select();\r\n  };\r\n\r\n  fieldsAreEmpty = () => {\r\n    const { username, password } = this.state;\r\n    return username.trim() === '' || password.trim() === '';\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    const { auth } = this.props;\r\n    return (\r\n      <form\r\n        className=\"login\"\r\n        autoComplete=\"off\"\r\n        onSubmit={this.handleFormSubmit}\r\n      >\r\n        <LoginHeader />\r\n\r\n        <div className=\"content content--grey\">\r\n          <LoginResult auth={auth} />\r\n\r\n          <InputField\r\n            label=\"Username\"\r\n            id=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={event => this.updateField(event, 'username')}\r\n          />\r\n\r\n          <InputField\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={event => this.updateField(event, 'password')}\r\n            saveRef={passwordInput => (this.passwordInput = passwordInput)}\r\n          />\r\n\r\n          <Button disabled={this.fieldsAreEmpty()}>Submit</Button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  login: (username, password) => dispatch(AuthAction.login(username, password))\r\n});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(Login);\r\n","import React from 'react';\r\n\r\nconst NavToggle = ({ onClick: toggle }) => (\r\n  <i className=\"material-icons nav__toggle\" onClick={toggle}>\r\n    format_align_justify\r\n  </i>\r\n);\r\n\r\nexport default NavToggle;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nimport NavToggle from './nav-toggle/NavToggle';\r\nimport { AuthAction } from '../../state/actions/auth';\r\n\r\nimport './navigation.scss';\r\n\r\nclass Navigation extends Component {\r\n  state = {\r\n    visibleOnSmallBreakpoint: false\r\n  };\r\n\r\n  toggleMenuVisibility = () => {\r\n    this.setState(state => ({\r\n      visibleOnSmallBreakpoint: !state.visibleOnSmallBreakpoint\r\n    }));\r\n  };\r\n\r\n  hideMenu = () => {\r\n    this.setState({\r\n      visibleOnSmallBreakpoint: false\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    const { logout, history } = this.props;\r\n    history.push('/');\r\n    logout();\r\n  };\r\n\r\n  render() {\r\n    const { username } = this.props;\r\n    const { visibleOnSmallBreakpoint } = this.state;\r\n    const navClassName = 'nav' + (visibleOnSmallBreakpoint ? ' nav--toggle-visible' : '');\r\n    return (\r\n      <nav className={navClassName}>\r\n        <NavToggle onClick={this.toggleMenuVisibility} />\r\n        <ul>\r\n          <li>\r\n            <NavLink className=\"nav__link\" exact to=\"/\" onClick={this.hideMenu}>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"nav__link\" to=\"/add-question\" onClick={this.hideMenu}>\r\n              Add question\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"nav__link\" to=\"/leaderboard\" onClick={this.hideMenu}>\r\n              Leaderboard\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <span\r\n              to=\"/logout\"\r\n              className=\"nav__link nav__link--user\"\r\n              onClick={this.logout}\r\n            >\r\n              Logout <span className=\"nav__link__username\">{username}</span>\r\n              <i className=\"material-icons tiny\">person_outline</i>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  username: state.auth.username\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  logout: () => dispatch(AuthAction.logout())\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    stateToProps,\r\n    dispatchToProps\r\n  )(Navigation)\r\n);\r\n","import * as API from './../../api/_DATA';\r\nimport { LoaderAction } from './loader';\r\nimport { UserActionCreator } from './users';\r\n\r\nconst SAVE_ALL_QUESTIONS = 'SAVE_ALL_QUESTIONS';\r\nconst ADD_QUESTION = 'ADD_QUESTION';\r\nconst ANSWER_QUESTION = 'ANSWER_QUESTION';\r\nconst UNANSWER_QUESTION = 'UNANSWER_QUESTION';\r\n\r\nconst QuestionActionCreator = {\r\n  saveAllQuestions: questions => ({\r\n    type: SAVE_ALL_QUESTIONS,\r\n    payload: questions\r\n  }),\r\n\r\n  addQuestion: question => ({\r\n    type: ADD_QUESTION,\r\n    payload: question\r\n  }),\r\n\r\n  answerQuestion: (username, questionId, option) => ({\r\n    type: ANSWER_QUESTION,\r\n    payload: {\r\n      username,\r\n      questionId,\r\n      option\r\n    }\r\n  }),\r\n\r\n  unanswerQuestion: (username, questionId, option) => ({\r\n    type: UNANSWER_QUESTION,\r\n    payload: {\r\n      username,\r\n      questionId,\r\n      option\r\n    }\r\n  })\r\n};\r\n\r\nconst fetchAllQuestions = () => dispatch => {\r\n  dispatch(LoaderAction.showLoader());\r\n  return API._getQuestions()\r\n    .then(questions => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      dispatch(QuestionActionCreator.saveAllQuestions(questions));\r\n    })\r\n    .catch(error => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      console.warn('Error fetching all questions:', error);\r\n    });\r\n};\r\n\r\nconst addQuestion = questionInfo => dispatch => {\r\n  dispatch(LoaderAction.showLoader());\r\n\r\n  return API._saveQuestion(questionInfo)\r\n    .then(question => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      dispatch(QuestionActionCreator.addQuestion(question));\r\n      dispatch(UserActionCreator.saveUserQuestion(question.author, question.id));\r\n    })\r\n    .catch(error => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      console.warn('Error fetching all questions:', error);\r\n    });\r\n};\r\n\r\nconst answerQuestion = (username, questionId, option) => dispatch => {\r\n  dispatch(QuestionActionCreator.answerQuestion(username, questionId, option));\r\n  dispatch(UserActionCreator.saveUserAnswer(username, questionId, option));\r\n\r\n  const answerPayload = {\r\n    authedUser: username,\r\n    qid: questionId,\r\n    answer: option\r\n  };\r\n  return API._saveQuestionAnswer(answerPayload).catch(() => {\r\n    dispatch(QuestionActionCreator.unanswerQuestion(username, questionId, option));\r\n    dispatch(UserActionCreator.unsaveUserAnswer(username, questionId));\r\n    alert('An error occured in the server, the question could not be saved');\r\n  });\r\n};\r\n\r\nexport const QuestionActionType = {\r\n  SAVE_ALL_QUESTIONS,\r\n  ADD_QUESTION,\r\n  ANSWER_QUESTION,\r\n  UNANSWER_QUESTION\r\n};\r\n\r\nexport const QuestionAction = {\r\n  fetchAllQuestions,\r\n  addQuestion,\r\n  answerQuestion\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './question-preview.scss';\r\nimport { QuestionAction } from '../../../state/actions/questions';\r\n\r\nconst QuestionText = ({ text }) => (\r\n  <div className=\"question-preview__text content--red\">{text}</div>\r\n);\r\n\r\nconst QuestionButton = ({ onClick: answerQuestion }) => (\r\n  <button className=\"question-preview__button content--grey\" onClick={answerQuestion}>\r\n    <i className=\"material-icons\">check</i>\r\n  </button>\r\n);\r\n\r\nconst QuestionOption = ({ option, text, allowToAnswer, onSelected: answerQuestion }) => {\r\n  const optionClassName = 'question-preview__option--' + (option === 1 ? 'one' : 'two');\r\n  return (\r\n    <section className={'question-preview__option ' + optionClassName}>\r\n      {allowToAnswer && <QuestionButton onClick={answerQuestion} />}\r\n      <QuestionText text={text} />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst QuestionPreview = props => {\r\n  const { username, allowToAnswer, answerQuestion, question } = props;\r\n  const { optionOne, optionTwo } = question;\r\n  return (\r\n    <article className=\"question-preview\">\r\n      <QuestionOption\r\n        option={1}\r\n        text={optionOne.text}\r\n        allowToAnswer={allowToAnswer}\r\n        onSelected={() => answerQuestion(username, question.id, 'optionOne')}\r\n      />\r\n      <QuestionOption\r\n        option={2}\r\n        text={optionTwo.text}\r\n        allowToAnswer={allowToAnswer}\r\n        onSelected={() => answerQuestion(username, question.id, 'optionTwo')}\r\n      />\r\n    </article>\r\n  );\r\n};\r\n\r\nconst stateToProps = (state, props) => ({\r\n  ...props,\r\n  username: state.auth.username\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  answerQuestion: (username, questionId, option) => {\r\n    dispatch(QuestionAction.answerQuestion(username, questionId, option));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(QuestionPreview);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport QuestionPreview from '../question-preview/QuestionPreview';\r\n\r\nimport './question-preview-list.scss';\r\n\r\nconst QuestionPreviewList = props => {\r\n  const { title, zeroItemsMessage, questions, allowToAnswer, loading } = props;\r\n  return (\r\n    <div className=\"question-preview-list\">\r\n      <h1>{title}</h1>\r\n      {!loading && questions.length === 0 && <p>{zeroItemsMessage}</p>}\r\n      <ul>\r\n        {questions.map(question => (\r\n          <li key={question.id}>\r\n            <QuestionPreview question={question} allowToAnswer={allowToAnswer} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst stateToProps = (state, props) => ({\r\n  ...props,\r\n  loading: state.loader\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(QuestionPreviewList);\r\n","import React from 'react';\r\n\r\nimport './lists-toggle.scss';\r\n\r\nconst getSelectedClass = condition => {\r\n  return condition ? 'selected' : '';\r\n};\r\n\r\nconst ToggleButton = ({ label, onClick, selectedCodition }) => (\r\n  <button type=\"button\" onClick={onClick} className={getSelectedClass(selectedCodition)}>\r\n    {label}\r\n  </button>\r\n);\r\n\r\nconst ListsToggle = props => {\r\n  const {\r\n    showBothLists,\r\n    showUnansweredList,\r\n    showAnsweredList,\r\n    unanswerdListVisible,\r\n    answerdListVisible\r\n  } = props;\r\n  return (\r\n    <section className=\"list-toggle\">\r\n      <span>Showing: </span>\r\n      <ToggleButton\r\n        label=\"both\"\r\n        onClick={showBothLists}\r\n        selectedCodition={unanswerdListVisible && answerdListVisible}\r\n      />\r\n      <ToggleButton\r\n        label=\"unanswered\"\r\n        onClick={showUnansweredList}\r\n        selectedCodition={unanswerdListVisible && !answerdListVisible}\r\n      />\r\n      <ToggleButton\r\n        label=\"answered\"\r\n        onClick={showAnsweredList}\r\n        selectedCodition={!unanswerdListVisible && answerdListVisible}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListsToggle;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport QuestionPreviewList from './question-preview-list/QuestionPreviewList';\r\nimport ListsToggle from './lists-toggle/ListsToggle';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    unanswerdListVisible: true,\r\n    answerdListVisible: true\r\n  };\r\n\r\n  showBothLists = () => {\r\n    this.setState({\r\n      unanswerdListVisible: true,\r\n      answerdListVisible: true\r\n    });\r\n  };\r\n\r\n  showUnansweredList = () => {\r\n    this.setState({\r\n      unanswerdListVisible: true,\r\n      answerdListVisible: false\r\n    });\r\n  };\r\n\r\n  showAnsweredList = () => {\r\n    this.setState({\r\n      unanswerdListVisible: false,\r\n      answerdListVisible: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { unansweredQuestions, answeredQuestions } = this.props;\r\n    const { unanswerdListVisible, answerdListVisible } = this.state;\r\n    return (\r\n      <div>\r\n        <ListsToggle\r\n          showBothLists={this.showBothLists}\r\n          showUnansweredList={this.showUnansweredList}\r\n          showAnsweredList={this.showAnsweredList}\r\n          unanswerdListVisible={unanswerdListVisible}\r\n          answerdListVisible={answerdListVisible}\r\n        />\r\n        {unanswerdListVisible && (\r\n          <QuestionPreviewList\r\n            questions={unansweredQuestions}\r\n            allowToAnswer={true}\r\n            title=\"Unanswered questions\"\r\n            zeroItemsMessage=\"Create a new question using the option in the upper menu\"\r\n          />\r\n        )}\r\n        {answerdListVisible && (\r\n          <QuestionPreviewList\r\n            questions={answeredQuestions}\r\n            allowToAnswer={false}\r\n            title=\"Answered questions\"\r\n            zeroItemsMessage=\"You haven't answered any question yet\"\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst sortDescByTimestamp = (question1, question2) => {\r\n  return question2.timestamp - question1.timestamp;\r\n};\r\n\r\nconst stateToProps = state => {\r\n  const questions = Object.values(state.questions);\r\n  const { username } = state.auth;\r\n  const user = state.users.list[username];\r\n  const answers = Object.keys(user.answers);\r\n\r\n  const unansweredQuestions = questions\r\n    .filter(question => answers.indexOf(question.id) === -1)\r\n    .sort(sortDescByTimestamp);\r\n  const answeredQuestions = questions\r\n    .filter(question => answers.indexOf(question.id) !== -1)\r\n    .sort(sortDescByTimestamp);\r\n\r\n  return {\r\n    unansweredQuestions,\r\n    answeredQuestions\r\n  };\r\n};\r\n\r\nconst dispatchToProps = dispatch => ({});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(Home);\r\n","export const ENTER_CODE = 13;\r\n\r\nexport const enterWasPressed = event => event.keyCode === ENTER_CODE;\r\n","import React, { Component } from 'react';\r\n\r\nimport { enterWasPressed } from './../../../utils/key-utils';\r\n\r\nclass QuestionOption extends Component {\r\n  handleEnter = event => {\r\n    const { handleEnter } = this.props;\r\n    if (enterWasPressed(event) && typeof handleEnter === 'function') {\r\n      event.preventDefault();\r\n      handleEnter();\r\n    }\r\n  };\r\n\r\n  gainFocusIfShould = () => {\r\n    if (this.props.focused) {\r\n      this.input.focus();\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.gainFocusIfShould();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gainFocusIfShould();\r\n  }\r\n\r\n  render() {\r\n    const { placeholder, name, value, updateValue } = this.props;\r\n    return (\r\n      <div className=\"add-question__option input-field\">\r\n        <input\r\n          className=\"add-question__input\"\r\n          type=\"text\"\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={updateValue}\r\n          onKeyDown={this.handleEnter}\r\n          ref={input => (this.input = input)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionOption;\r\n","import React, { Component } from 'react';\r\n\r\nimport Button from '../../shared/button/Button';\r\nimport QuestionOption from './../question-option/QuestionOption';\r\n\r\nclass QuestionForm extends Component {\r\n  state = {\r\n    optionOne: '',\r\n    optionTwo: '',\r\n    focusOne: true,\r\n    focusTwo: false\r\n  };\r\n\r\n  giveFocusToOptionTwo = () => {\r\n    this.setState({\r\n      focusOne: false,\r\n      focusTwo: true\r\n    });\r\n  };\r\n\r\n  updateOptionValue = event => {\r\n    const field = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [field]: value,\r\n      focusOne: field === 'optionOne',\r\n      focusTwo: field === 'optionTwo'\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.bothOptionsWereFilled()) {\r\n      const { optionOne, optionTwo } = this.state;\r\n      this.props.addQuestion({\r\n        optionOne,\r\n        optionTwo\r\n      });\r\n    }\r\n  };\r\n\r\n  bothOptionsWereFilled = () => {\r\n    const { optionOne, optionTwo } = this.state;\r\n    const optionOneNonEmpty = optionOne.trim() !== '';\r\n    const optionTwoNonEmpty = optionTwo.trim() !== '';\r\n    return optionOneNonEmpty && optionTwoNonEmpty;\r\n  };\r\n\r\n  render() {\r\n    const { optionOne, optionTwo, focusOne, focusTwo } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n        <QuestionOption\r\n          name=\"optionOne\"\r\n          placeholder=\"this\"\r\n          value={optionOne}\r\n          updateValue={this.updateOptionValue}\r\n          handleEnter={this.giveFocusToOptionTwo}\r\n          focused={focusOne}\r\n        />\r\n\r\n        <span className=\"add-question__option-separator\">Or</span>\r\n\r\n        <QuestionOption\r\n          name=\"optionTwo\"\r\n          placeholder=\"that\"\r\n          value={optionTwo}\r\n          updateValue={this.updateOptionValue}\r\n          focused={focusTwo}\r\n        />\r\n\r\n        <Button className=\"add-question__button\" disabled={!this.bothOptionsWereFilled()}>\r\n          Add\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionForm;\r\n","import React from 'react';\r\n\r\nconst QuestionTitle = () => (\r\n  <h1 className=\"add-question__title\">\r\n    Would you\r\n    <br />\r\n    rather\r\n  </h1>\r\n);\r\n\r\nexport default QuestionTitle;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport QuestionForm from './question-form/QuestionForm';\r\nimport QuestionTitle from './question-title/QuestionTitle';\r\nimport { QuestionAction } from '../../state/actions/questions';\r\n\r\nimport './add-question.scss';\r\n\r\nclass AddQuestion extends Component {\r\n  addQuestion = question => {\r\n    const { username, addQuestion, history } = this.props;\r\n    addQuestion(question.optionOne, question.optionTwo, username);\r\n    history.push('/');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"add-question\">\r\n        <QuestionTitle />\r\n        <QuestionForm addQuestion={this.addQuestion} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  username: state.auth.username\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  addQuestion: (optionOneText, optionTwoText, author) => {\r\n    dispatch(\r\n      QuestionAction.addQuestion({\r\n        optionOneText,\r\n        optionTwoText,\r\n        author\r\n      })\r\n    );\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(AddQuestion);\r\n","import React from 'react';\r\n\r\nimport './icons-credit.scss';\r\n\r\nconst IconsCredit = () => (\r\n  <div className=\"icons-credit\">\r\n    Icons made by{' '}\r\n    <a href=\"http://www.freepik.com/\" title=\"Freepik\">\r\n      Freepik\r\n    </a>{' '}\r\n    from{' '}\r\n    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n      www.flaticon.com\r\n    </a>{' '}\r\n    is licensed by{' '}\r\n    <a\r\n      href=\"http://creativecommons.org/licenses/by/3.0/\"\r\n      title=\"Creative Commons BY 3.0\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      {' '}\r\n      CC 3.0 BY\r\n    </a>\r\n  </div>\r\n);\r\n\r\nexport default IconsCredit;\r\n","import React from 'react';\r\n\r\nconst UserAvatar = ({ user }) => (\r\n  <img src={user.avatarURL} alt={user.id + ' avatar'} className=\"leaderboard__avatar\" />\r\n);\r\n\r\nconst LeaderboardTable = ({ users }) => (\r\n  <table className=\"leaderboard centered\">\r\n    <thead>\r\n      <tr>\r\n        <th />\r\n        <th>user</th>\r\n        <th>questions created</th>\r\n        <th>questions answered</th>\r\n        <th>rank</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {users.map((user, index) => (\r\n        <tr key={user.id}>\r\n          <td>\r\n            <UserAvatar user={user} />\r\n          </td>\r\n          <td>{user.id}</td>\r\n          <td>{user.questions}</td>\r\n          <td>{user.answers}</td>\r\n          <td>{index + 1}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default LeaderboardTable;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport IconsCredit from '../icons-credit/IconsCredit';\r\nimport LeaderboardTable from './leaderboard-table/LeaderboardTable';\r\nimport { UserAction } from '../../state/actions/users';\r\n\r\nimport './leaderboard.scss';\r\n\r\nclass Leaderboard extends Component {\r\n  componentDidMount() {\r\n    const { shouldFetchUsers, fetchAllUsers } = this.props;\r\n    if (shouldFetchUsers) {\r\n      fetchAllUsers();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { users } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <LeaderboardTable users={users} />\r\n        <IconsCredit />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => {\r\n  const users = Object.values(state.users.list)\r\n    .map(user => {\r\n      const questions = user.questions.length;\r\n      const answers = Object.keys(user.answers).length;\r\n      const score = questions + answers;\r\n      return {\r\n        ...user,\r\n        questions,\r\n        answers,\r\n        score\r\n      };\r\n    })\r\n    .sort((user1, user2) => user2.score - user1.score);\r\n\r\n  return {\r\n    shouldFetchUsers: !state.users.allUsersRequested,\r\n    users\r\n  };\r\n};\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  fetchAllUsers: () => dispatch(UserAction.fetchAllUsers())\r\n});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(Leaderboard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Login from './login/Login';\r\nimport Navigation from './navigation/Navigation';\r\nimport Home from './home/Home';\r\nimport AddQuestion from './add-question/AddQuestion';\r\nimport Leaderboard from './leaderboard/Leaderboard';\r\n\r\nimport { QuestionAction } from '../state/actions/questions';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchAllQuestions();\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.logged) {\r\n      return <Login />;\r\n    }\r\n\r\n    return (\r\n      <BrowserRouter basename=\"/nano-degree-would-you-rather/\">\r\n        <div className=\"main-container\">\r\n          <Navigation />\r\n          <div>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/add-question\" component={AddQuestion} />\r\n            <Route exact path=\"/leaderboard\" component={Leaderboard} />\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  fetchAllQuestions: () => {\r\n    dispatch(QuestionAction.fetchAllQuestions());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(App);\r\n","import React from 'react';\r\nimport ReactLoader from 'react-loader-spinner';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './loader.scss';\r\n\r\nconst Loader = props => {\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"loader-outer\">\r\n      <div className=\"loader-inner\">\r\n        <ReactLoader type=\"Puff\" color=\"#ff474f\" height=\"100\" width=\"100\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst stateToProps = state => ({\r\n  show: state.loader\r\n});\r\n\r\nexport default connect(stateToProps)(Loader);\r\n","import { AuthActionType } from '../actions/auth';\r\n\r\nconst authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case AuthActionType.LOGIN_SUCCESS:\r\n      return loginSuccess(state, action);\r\n\r\n    case AuthActionType.LOGIN_FAIL:\r\n      return loginFail(state, action);\r\n\r\n    case AuthActionType.LOGOUT:\r\n      return logout(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loginSuccess = (state, action) => {\r\n  const username = action.payload;\r\n  const time = Date.now();\r\n  return {\r\n    logged: true,\r\n    username,\r\n    time\r\n  };\r\n};\r\n\r\nconst loginFail = (state, action) => {\r\n  const error = action.payload;\r\n  return {\r\n    logged: false,\r\n    error\r\n  };\r\n};\r\n\r\nconst logout = (state, action) => {\r\n  return {\r\n    logged: false\r\n  };\r\n};\r\n\r\nexport default authReducer;\r\n","import { LoaderActionType } from '../actions/loader';\r\n\r\nconst loaderReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case LoaderActionType.SHOW_LOADER:\r\n      return true;\r\n    case LoaderActionType.HIDE_LOADER:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loaderReducer;\r\n","import { QuestionActionType } from '../actions/questions';\r\n\r\nconst questionsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case QuestionActionType.SAVE_ALL_QUESTIONS:\r\n      return saveAllQuestions(state, action);\r\n\r\n    case QuestionActionType.ADD_QUESTION:\r\n      return addQuestion(state, action);\r\n\r\n    case QuestionActionType.ANSWER_QUESTION:\r\n      return answerQuestion(state, action);\r\n\r\n    case QuestionActionType.UNANSWER_QUESTION:\r\n      return unanswerQuestion(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst saveAllQuestions = (state, action) => {\r\n  return { ...action.payload };\r\n};\r\n\r\nconst addQuestion = (state, action) => {\r\n  const question = action.payload;\r\n  return {\r\n    ...state,\r\n    [question.id]: question\r\n  };\r\n};\r\n\r\nconst answerQuestion = (state, action) => {\r\n  const { username, questionId, option } = action.payload;\r\n\r\n  const question = state[questionId];\r\n  const selectedOption = question[option];\r\n  const votes = [...selectedOption.votes, username];\r\n\r\n  return {\r\n    ...state,\r\n    [questionId]: {\r\n      ...question,\r\n      [option]: {\r\n        ...selectedOption,\r\n        votes\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst unanswerQuestion = (state, action) => {\r\n  const { username, questionId, option } = action.payload;\r\n\r\n  const question = state[questionId];\r\n  const selectedOption = question[option];\r\n  const votes = selectedOption.votes.filter(vote => vote !== username);\r\n\r\n  return {\r\n    ...state,\r\n    [questionId]: {\r\n      ...question,\r\n      [option]: {\r\n        ...selectedOption,\r\n        votes\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default questionsReducer;\r\n","import { UserActionType } from '../actions/users';\r\n\r\nconst initialUsersState = {\r\n  allUsersRequested: false,\r\n  list: {}\r\n};\r\n\r\nconst usersReducer = (state = initialUsersState, action) => {\r\n  switch (action.type) {\r\n    case UserActionType.SAVE_USER:\r\n      return saveUser(state, action);\r\n\r\n    case UserActionType.SAVE_USER_QUESTION:\r\n      return saveUserQuestion(state, action);\r\n\r\n    case UserActionType.SAVE_USER_ANSWER:\r\n      return saveUserAnswer(state, action);\r\n\r\n    case UserActionType.UNSAVE_USER_ANSWER:\r\n      return unsaveUserAnswer(state, action);\r\n\r\n    case UserActionType.SAVE_ALL_USERS:\r\n      return saveAllUsers(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst saveUser = (state, action) => {\r\n  const user = action.payload;\r\n  return {\r\n    ...state,\r\n    list: {\r\n      ...state.list,\r\n      [user.id]: user\r\n    }\r\n  };\r\n};\r\n\r\nconst saveUserQuestion = (state, action) => {\r\n  const { username, questionId } = action.payload;\r\n  const user = state.list[username];\r\n  const questions = [...user.questions, questionId];\r\n  return {\r\n    ...state,\r\n    list: {\r\n      ...state.list,\r\n      [user.id]: {\r\n        ...user,\r\n        questions\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst saveUserAnswer = (state, action) => {\r\n  const { username, questionId, option } = action.payload;\r\n  const user = state.list[username];\r\n  const answers = { ...user.answers, [questionId]: option };\r\n  return {\r\n    ...state,\r\n    list: {\r\n      ...state.list,\r\n      [user.id]: {\r\n        ...user,\r\n        answers\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst unsaveUserAnswer = (state, action) => {\r\n  const { username, questionId } = action.payload;\r\n  const user = state.list[username];\r\n  const answers = { ...user.answers };\r\n  delete answers[questionId];\r\n  return {\r\n    ...state,\r\n    list: {\r\n      ...state.list,\r\n      [user.id]: {\r\n        ...user,\r\n        answers\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst saveAllUsers = (state, action) => {\r\n  return {\r\n    allUsersRequested: true,\r\n    list: {\r\n      ...action.payload\r\n    }\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth';\r\nimport loader from './loader';\r\nimport questions from './questions';\r\nimport users from './users';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  loader,\r\n  questions,\r\n  users\r\n});\r\n","const logger = store => next => action => {\r\n  console.group(action.type);\r\n  if (action.payload !== undefined) {\r\n    console.log('Payload: ', action.payload);\r\n  }\r\n  const result = next(action);\r\n  console.log('New state: ', store.getState());\r\n  console.groupEnd();\r\n  return result;\r\n};\r\n\r\nexport default logger;\r\n","import { applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from './logger';\r\n\r\nexport default applyMiddleware(thunk, logger);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport Loader from './components/shared/loader/Loader';\r\nimport reducers from './state/reducers';\r\nimport middlewares from './state/middlewares';\r\n\r\nimport './styles/index.scss';\r\n\r\nconst store = createStore(reducers, middlewares);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Loader />\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}