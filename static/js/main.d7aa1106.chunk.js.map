{"version":3,"sources":["components/shared/input-field/InputField.jsx","components/shared/button/Button.jsx","api/_DATA.js","state/actions/loader.js","state/actions/users.js","state/actions/auth.js","components/login/Login.jsx","components/navigation/nav-toggle/NavToggle.jsx","components/navigation/Navigation.jsx","components/shared/question-preview/QuestionPreview.jsx","components/shared/question-preview-list/QuestionPreviewList.jsx","components/home/lists-toggle/ListsToggle.jsx","components/home/Home.jsx","utils/key-utils.js","components/add-question/question-option/QuestionOption.jsx","components/add-question/question-form/QuestionForm.jsx","components/add-question/question-title/QuestionTitle.jsx","state/actions/questions.js","components/add-question/AddQuestion.jsx","components/App.js","components/shared/loader/Loader.jsx","state/reducers/auth.js","state/reducers/loader.js","state/reducers/questions.js","state/reducers/users.js","state/reducers/index.js","state/middlewares/logger.js","state/middlewares/index.js","index.js"],"names":["InputField","getInputProps","inputProps","Object","objectSpread","_this","props","saveRef","id","label","_this$props","this","react_default","a","createElement","className","assign","ref","htmlFor","Component","Button","name","timeout","users","sarahedo","avatarURL","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","_ref","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","defineProperty","concat","LoaderActionCreator","type","LoaderActionType","LoaderAction","UserActionType","UserActionCreator","user","payload","UserAction","dispatch","AuthActionCreator","username","error","AuthActionType","AuthAction","password","resolve","reject","message","API","then","response","catch","LoginHeader","LoginResult","auth","Login","state","updateField","event","field","setState","target","value","handleFormSubmit","preventDefault","_this$state","login","passwordInput","focus","select","fieldsAreEmpty","_this$state2","trim","_this2","_this$state3","autoComplete","onSubmit","Login_LoginHeader","Login_LoginResult","input_field_InputField","onChange","button_Button","disabled","connect","NavToggle","toggle","onClick","Navigation","visibleOnSmallBreakpoint","toggleMenuVisibility","hideMenu","logout","history","push","navClassName","nav_toggle_NavToggle","NavLink","exact","to","withRouter","QuestionText","QuestionButton","QuestionOption","_ref2","option","allowToAnswer","optionClassName","QuestionPreview_QuestionButton","QuestionPreview_QuestionText","QuestionPreview","_props$question","QuestionPreview_QuestionOption","QuestionPreviewList","title","map","key","question_preview_QuestionPreview","ToggleButton","condition","selectedCodition","ListsToggle","showBothLists","showUnansweredList","showAnsweredList","unanswerdListVisible","answerdListVisible","ListsToggle_ToggleButton","Home","unansweredQuestions","answeredQuestions","lists_toggle_ListsToggle","question_preview_list_QuestionPreviewList","values","keys","filter","indexOf","enterWasPressed","keyCode","handleEnter","gainFocusIfShould","focused","input","placeholder","updateValue","onKeyDown","QuestionForm","focusOne","focusTwo","giveFocusToOptionTwo","updateOptionValue","_this$setState","handleSubmit","bothOptionsWereFilled","addQuestion","optionOneNonEmpty","optionTwoNonEmpty","question_option_QuestionOption","QuestionTitle","QuestionActionCreator","QuestionActionType","QuestionAction","console","warn","questionInfo","AddQuestion","question_title_QuestionTitle","question_form_QuestionForm","App","fetchAllQuestions","logged","BrowserRouter","navigation_Navigation","Route","path","component","login_Login","show","loader","react_loader_spinner_default","color","height","width","loginSuccess","action","time","loginFail","authReducer","arguments","length","undefined","loaderReducer","saveAllQuestions","questionsReducer","saveUser","usersReducer","combineReducers","logger","store","next","group","log","result","getState","groupEnd","applyMiddleware","thunk","createStore","reducers","middlewares","ReactDOM","render","es","loader_Loader","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d7aa1106.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './input-field.scss';\r\n\r\nclass InputField extends Component {\r\n  getInputProps = () => {\r\n    const inputProps = { ...this.props };\r\n    delete inputProps.saveRef;\r\n    delete inputProps.id;\r\n    delete inputProps.label;\r\n    return inputProps;\r\n  };\r\n\r\n  render() {\r\n    const { id, label, saveRef } = this.props;\r\n    const inputProps = this.getInputProps();\r\n    return (\r\n      <div className=\"input-field\">\r\n        <input {...inputProps} ref={saveRef} />\r\n        <label htmlFor={id}>{label}</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\nimport './button.scss';\r\n\r\nconst Button = props => {\r\n  const className = props.className ? ' ' + props.className : '';\r\n  return (\r\n    <button\r\n      {...props}\r\n      className={'btn waves-effect waves-light' + className}\r\n      name=\"action\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const timeout = 1;\r\n\r\nlet users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: '../../images/snow.jpg',\r\n    answers: {\r\n      '8xf0y6ziyjabvozdd253nd': 'optionOne',\r\n      '6ni6ok3ym7mf1p33lnez': 'optionOne',\r\n      am8ehyc8byjqgar0jgpub9: 'optionTwo',\r\n      loxhs1bqm25b708cmbf3g: 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: '../../images/tyler.jpg',\r\n    answers: {\r\n      vthrdm985a262al8qx3do: 'optionOne',\r\n      xj352vofupe1dqz9emx13r: 'optionTwo'\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do']\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: '../../images/leaf.jpg',\r\n    answers: {\r\n      xj352vofupe1dqz9emx13r: 'optionOne',\r\n      vthrdm985a262al8qx3do: 'optionTwo',\r\n      '6ni6ok3ym7mf1p33lnez': 'optionOne'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r']\r\n  }\r\n};\r\n\r\nlet questions = {\r\n  '8xf0y6ziyjabvozdd253nd': {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory'\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  '6ni6ok3ym7mf1p33lnez': {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero'\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillian'\r\n    }\r\n  },\r\n  am8ehyc8byjqgar0jgpub9: {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic'\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  loxhs1bqm25b708cmbf3g: {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer'\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  vthrdm985a262al8qx3do: {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself'\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  xj352vofupe1dqz9emx13r: {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript'\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  }\r\n};\r\n\r\nfunction generateUID() {\r\n  return (\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15) +\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15)\r\n  );\r\n}\r\n\r\nexport function _getUsers() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...users }), timeout);\r\n  });\r\n}\r\n\r\nexport function _login(username, password) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const user = users[username];\r\n      if (user) {\r\n        resolve({ user });\r\n      } else {\r\n        reject({ message: 'Username or password invalid' });\r\n      }\r\n    }, timeout);\r\n  });\r\n}\r\n\r\nexport function _getQuestions() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...questions }), timeout);\r\n  });\r\n}\r\n\r\nexport function _getQuestion(id) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const question = questions[id];\r\n      if (question) {\r\n        resolve({ question });\r\n      } else {\r\n        reject({ message: 'Question not found' });\r\n      }\r\n    }, timeout);\r\n  });\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText\r\n    }\r\n  };\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      };\r\n\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      };\r\n\r\n      res(formattedQuestion);\r\n    }, timeout);\r\n  });\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      };\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      };\r\n\r\n      res();\r\n    }, timeout);\r\n  });\r\n}\r\n","const SHOW_LOADER = 'SHOW_LOADER';\r\nconst HIDE_LOADER = 'HIDE_LOADER';\r\n\r\nconst LoaderActionCreator = {\r\n  showLoader: () => ({\r\n    type: SHOW_LOADER\r\n  }),\r\n\r\n  hideLoader: () => ({\r\n    type: HIDE_LOADER\r\n  })\r\n};\r\n\r\nexport const LoaderActionType = {\r\n  SHOW_LOADER,\r\n  HIDE_LOADER\r\n};\r\n\r\nexport const LoaderAction = {\r\n  showLoader: () => LoaderActionCreator.showLoader(),\r\n  hideLoader: () => LoaderActionCreator.hideLoader()\r\n};\r\n","const SAVE_USER = 'SAVE_USER';\r\n\r\nexport const UserActionType = {\r\n  SAVE_USER\r\n};\r\n\r\nconst UserActionCreator = {\r\n  saveUser: user => ({\r\n    type: SAVE_USER,\r\n    payload: user\r\n  })\r\n};\r\n\r\nconst saveUser = user => dispatch => {\r\n  return dispatch(UserActionCreator.saveUser(user));\r\n};\r\n\r\nexport const UserAction = {\r\n  saveUser\r\n};\r\n","import * as API from './../../api/_DATA';\r\nimport { LoaderAction } from './loader';\r\nimport { UserAction } from './users';\r\n\r\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nconst LOGIN_FAIL = 'LOGIN_FAIL';\r\nconst LOGOUT = 'LOGOUT';\r\n\r\nconst AuthActionCreator = {\r\n  loginSuccess: username => ({\r\n    type: LOGIN_SUCCESS,\r\n    payload: username\r\n  }),\r\n\r\n  loginFail: error => ({\r\n    type: LOGIN_FAIL,\r\n    payload: error\r\n  }),\r\n\r\n  logout: () => ({\r\n    type: LOGOUT\r\n  })\r\n};\r\n\r\nconst login = (username, password) => dispatch => {\r\n  dispatch(LoaderAction.showLoader());\r\n  return API._login(username, password)\r\n    .then(response => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      dispatch(UserAction.saveUser(response.user));\r\n      dispatch(AuthActionCreator.loginSuccess(response.user.id));\r\n    })\r\n    .catch(error => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      dispatch(AuthActionCreator.loginFail(error.message));\r\n    });\r\n};\r\n\r\nconst logout = () => dispatch => dispatch(AuthActionCreator.logout());\r\n\r\nexport const AuthActionType = {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n};\r\n\r\nexport const AuthAction = {\r\n  login,\r\n  logout\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport InputField from '../shared/input-field/InputField';\r\nimport Button from '../shared/button/Button';\r\nimport { AuthAction } from '../../state/actions/auth';\r\n\r\nimport './login.scss';\r\n\r\nconst LoginHeader = () => (\r\n  <header className=\"content content--red\">\r\n    <h1>Login area</h1>\r\n  </header>\r\n);\r\n\r\nconst LoginResult = ({ auth }) => {\r\n  if (!auth.error) {\r\n    return null;\r\n  }\r\n  return <p className=\"login__result\">{auth.error}</p>;\r\n};\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: 'johndoe',\r\n    password: 'johndoe'\r\n  };\r\n\r\n  updateField = (event, field) => {\r\n    this.setState({\r\n      [field]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n    this.props.login(username, password);\r\n    this.passwordInput.focus();\r\n    this.passwordInput.select();\r\n  };\r\n\r\n  fieldsAreEmpty = () => {\r\n    const { username, password } = this.state;\r\n    return username.trim() === '' || password.trim() === '';\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    const { auth } = this.props;\r\n    return (\r\n      <form\r\n        className=\"login\"\r\n        autoComplete=\"off\"\r\n        onSubmit={this.handleFormSubmit}\r\n      >\r\n        <LoginHeader />\r\n\r\n        <div className=\"content content--grey\">\r\n          <LoginResult auth={auth} />\r\n\r\n          <InputField\r\n            label=\"Username\"\r\n            id=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={event => this.updateField(event, 'username')}\r\n          />\r\n\r\n          <InputField\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={event => this.updateField(event, 'password')}\r\n            saveRef={passwordInput => (this.passwordInput = passwordInput)}\r\n          />\r\n\r\n          <Button disabled={this.fieldsAreEmpty()}>Submit</Button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  login: (username, password) => dispatch(AuthAction.login(username, password))\r\n});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(Login);\r\n","import React from 'react';\r\n\r\nconst NavToggle = ({ onClick: toggle }) => (\r\n  <i className=\"material-icons nav__toggle\" onClick={toggle}>\r\n    format_align_justify\r\n  </i>\r\n);\r\n\r\nexport default NavToggle;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nimport NavToggle from './nav-toggle/NavToggle';\r\nimport { AuthAction } from '../../state/actions/auth';\r\n\r\nimport './navigation.scss';\r\n\r\nclass Navigation extends Component {\r\n  state = {\r\n    visibleOnSmallBreakpoint: false\r\n  };\r\n\r\n  toggleMenuVisibility = () => {\r\n    this.setState(state => ({\r\n      visibleOnSmallBreakpoint: !state.visibleOnSmallBreakpoint\r\n    }));\r\n  };\r\n\r\n  hideMenu = () => {\r\n    this.setState({\r\n      visibleOnSmallBreakpoint: false\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    const { logout, history } = this.props;\r\n    history.push('/');\r\n    logout();\r\n  };\r\n\r\n  render() {\r\n    const { username } = this.props;\r\n    const { visibleOnSmallBreakpoint } = this.state;\r\n    const navClassName = 'nav' + (visibleOnSmallBreakpoint ? ' nav--toggle-visible' : '');\r\n    return (\r\n      <nav className={navClassName}>\r\n        <NavToggle onClick={this.toggleMenuVisibility} />\r\n        <ul>\r\n          <li>\r\n            <NavLink className=\"nav__link\" exact to=\"/\" onClick={this.hideMenu}>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"nav__link\" to=\"/add-question\" onClick={this.hideMenu}>\r\n              Add question\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"nav__link\" to=\"/leaderboard\" onClick={this.hideMenu}>\r\n              Leaderboard\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <span\r\n              to=\"/logout\"\r\n              className=\"nav__link nav__link--user\"\r\n              onClick={this.logout}\r\n            >\r\n              Logout <span className=\"nav__link__username\">{username}</span>\r\n              <i className=\"material-icons tiny\">person_outline</i>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  username: state.auth.username\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  logout: () => dispatch(AuthAction.logout())\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    stateToProps,\r\n    dispatchToProps\r\n  )(Navigation)\r\n);\r\n","import React from 'react';\r\n\r\nimport './question-preview.scss';\r\n\r\nconst QuestionText = ({ text }) => (\r\n  <div className=\"question-preview__text content--red\">{text}</div>\r\n);\r\n\r\nconst QuestionButton = () => (\r\n  <button className=\"question-preview__button content--grey\">\r\n    <i className=\"material-icons\">check</i>\r\n  </button>\r\n);\r\n\r\nconst QuestionOption = ({ option, text, allowToAnswer }) => {\r\n  const optionClassName = 'question-preview__option--' + (option === 1 ? 'one' : 'two');\r\n  return (\r\n    <section className={'question-preview__option ' + optionClassName}>\r\n      {allowToAnswer && <QuestionButton />}\r\n      <QuestionText text={text} />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst QuestionPreview = props => {\r\n  const { allowToAnswer } = props;\r\n  const { optionOne, optionTwo } = props.question;\r\n  return (\r\n    <article className=\"question-preview\">\r\n      <QuestionOption option={1} text={optionOne.text} allowToAnswer={allowToAnswer} />\r\n      <QuestionOption option={2} text={optionTwo.text} allowToAnswer={allowToAnswer} />\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default QuestionPreview;\r\n","import React from 'react';\r\n\r\nimport QuestionPreview from '../question-preview/QuestionPreview';\r\n\r\nimport './question-preview-list.scss';\r\n\r\nconst QuestionPreviewList = props => {\r\n  const { title, questions, allowToAnswer } = props;\r\n  return (\r\n    <div className=\"question-preview-list\">\r\n      <h1>{title}</h1>\r\n      <ul>\r\n        {questions.map(question => (\r\n          <li key={question.id}>\r\n            <QuestionPreview question={question} allowToAnswer={allowToAnswer} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionPreviewList;\r\n","import React from 'react';\r\n\r\nimport './lists-toggle.scss';\r\n\r\nconst getSelectedClass = condition => {\r\n  return condition ? 'selected' : '';\r\n};\r\n\r\nconst ToggleButton = ({ label, onClick, selectedCodition }) => (\r\n  <button type=\"button\" onClick={onClick} className={getSelectedClass(selectedCodition)}>\r\n    {label}\r\n  </button>\r\n);\r\n\r\nconst ListsToggle = props => {\r\n  const {\r\n    showBothLists,\r\n    showUnansweredList,\r\n    showAnsweredList,\r\n    unanswerdListVisible,\r\n    answerdListVisible\r\n  } = props;\r\n  return (\r\n    <section className=\"list-toggle\">\r\n      <span>Showing: </span>\r\n      <ToggleButton\r\n        label=\"both\"\r\n        onClick={showBothLists}\r\n        selectedCodition={unanswerdListVisible && answerdListVisible}\r\n      />\r\n      <ToggleButton\r\n        label=\"unanswered\"\r\n        onClick={showUnansweredList}\r\n        selectedCodition={unanswerdListVisible && !answerdListVisible}\r\n      />\r\n      <ToggleButton\r\n        label=\"answered\"\r\n        onClick={showAnsweredList}\r\n        selectedCodition={!unanswerdListVisible && answerdListVisible}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListsToggle;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport QuestionPreviewList from './../shared/question-preview-list/QuestionPreviewList';\r\nimport ListsToggle from './lists-toggle/ListsToggle';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    unanswerdListVisible: true,\r\n    answerdListVisible: true\r\n  };\r\n\r\n  showBothLists = () => {\r\n    this.setState({\r\n      unanswerdListVisible: true,\r\n      answerdListVisible: true\r\n    });\r\n  };\r\n\r\n  showUnansweredList = () => {\r\n    this.setState({\r\n      unanswerdListVisible: true,\r\n      answerdListVisible: false\r\n    });\r\n  };\r\n\r\n  showAnsweredList = () => {\r\n    this.setState({\r\n      unanswerdListVisible: false,\r\n      answerdListVisible: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { unansweredQuestions, answeredQuestions } = this.props;\r\n    const { unanswerdListVisible, answerdListVisible } = this.state;\r\n    return (\r\n      <div>\r\n        <ListsToggle\r\n          showBothLists={this.showBothLists}\r\n          showUnansweredList={this.showUnansweredList}\r\n          showAnsweredList={this.showAnsweredList}\r\n          unanswerdListVisible={unanswerdListVisible}\r\n          answerdListVisible={answerdListVisible}\r\n        />\r\n        {unanswerdListVisible && (\r\n          <QuestionPreviewList\r\n            questions={unansweredQuestions}\r\n            title=\"Unanswered questions\"\r\n            allowToAnswer={true}\r\n          />\r\n        )}\r\n        {answerdListVisible && (\r\n          <QuestionPreviewList\r\n            questions={answeredQuestions}\r\n            title=\"Answered questions\"\r\n            allowToAnswer={false}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => {\r\n  const questions = Object.values(state.questions);\r\n  const { username } = state.auth;\r\n  const user = state.users[username];\r\n  const answers = Object.keys(user.answers);\r\n\r\n  const unansweredQuestions = questions.filter(\r\n    question => answers.indexOf(question.id) === -1\r\n  );\r\n  const answeredQuestions = questions.filter(\r\n    question => answers.indexOf(question.id) !== -1\r\n  );\r\n  return {\r\n    unansweredQuestions,\r\n    answeredQuestions\r\n  };\r\n};\r\n\r\nconst dispatchToProps = dispatch => ({});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(Home);\r\n","export const ENTER_CODE = 13;\r\n\r\nexport const enterWasPressed = event => event.keyCode === ENTER_CODE;\r\n","import React, { Component } from 'react';\r\n\r\nimport { enterWasPressed } from './../../../utils/key-utils';\r\n\r\nclass QuestionOption extends Component {\r\n  handleEnter = event => {\r\n    const { handleEnter } = this.props;\r\n    if (enterWasPressed(event) && typeof handleEnter === 'function') {\r\n      event.preventDefault();\r\n      handleEnter();\r\n    }\r\n  };\r\n\r\n  gainFocusIfShould = () => {\r\n    if (this.props.focused) {\r\n      this.input.focus();\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.gainFocusIfShould();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gainFocusIfShould();\r\n  }\r\n\r\n  render() {\r\n    const { placeholder, name, value, updateValue } = this.props;\r\n    return (\r\n      <div className=\"add-question__option input-field\">\r\n        <input\r\n          className=\"add-question__input\"\r\n          type=\"text\"\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={updateValue}\r\n          onKeyDown={this.handleEnter}\r\n          ref={input => (this.input = input)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionOption;\r\n","import React, { Component } from 'react';\r\n\r\nimport Button from '../../shared/button/Button';\r\nimport QuestionOption from './../question-option/QuestionOption';\r\n\r\nclass QuestionForm extends Component {\r\n  state = {\r\n    optionOne: '',\r\n    optionTwo: '',\r\n    focusOne: true,\r\n    focusTwo: false\r\n  };\r\n\r\n  giveFocusToOptionTwo = () => {\r\n    this.setState({\r\n      focusOne: false,\r\n      focusTwo: true\r\n    });\r\n  };\r\n\r\n  updateOptionValue = event => {\r\n    const field = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [field]: value,\r\n      focusOne: field === 'optionOne',\r\n      focusTwo: field === 'optionTwo'\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.bothOptionsWereFilled()) {\r\n      const { optionOne, optionTwo } = this.state;\r\n      this.props.addQuestion({\r\n        optionOne,\r\n        optionTwo\r\n      });\r\n    }\r\n  };\r\n\r\n  bothOptionsWereFilled = () => {\r\n    const { optionOne, optionTwo } = this.state;\r\n    const optionOneNonEmpty = optionOne.trim() !== '';\r\n    const optionTwoNonEmpty = optionTwo.trim() !== '';\r\n    return optionOneNonEmpty && optionTwoNonEmpty;\r\n  };\r\n\r\n  render() {\r\n    const { optionOne, optionTwo, focusOne, focusTwo } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n        <QuestionOption\r\n          name=\"optionOne\"\r\n          placeholder=\"this\"\r\n          value={optionOne}\r\n          updateValue={this.updateOptionValue}\r\n          handleEnter={this.giveFocusToOptionTwo}\r\n          focused={focusOne}\r\n        />\r\n\r\n        <span className=\"add-question__option-separator\">Or</span>\r\n\r\n        <QuestionOption\r\n          name=\"optionTwo\"\r\n          placeholder=\"that\"\r\n          value={optionTwo}\r\n          updateValue={this.updateOptionValue}\r\n          focused={focusTwo}\r\n        />\r\n\r\n        <Button className=\"add-question__button\" disabled={!this.bothOptionsWereFilled()}>\r\n          Add\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionForm;\r\n","import React from 'react';\r\n\r\nconst QuestionTitle = () => (\r\n  <h1 className=\"add-question__title\">\r\n    Would you\r\n    <br />\r\n    rather\r\n  </h1>\r\n);\r\n\r\nexport default QuestionTitle;\r\n","import * as API from './../../api/_DATA';\r\nimport { LoaderAction } from './loader';\r\n\r\nconst SAVE_ALL_QUESTIONS = 'SAVE_ALL_QUESTIONS';\r\nconst ADD_QUESTION = 'ADD_QUESTION';\r\n\r\nconst QuestionActionCreator = {\r\n  saveAllQuestions: questions => ({\r\n    type: SAVE_ALL_QUESTIONS,\r\n    payload: questions\r\n  }),\r\n\r\n  addQuestion: question => ({\r\n    type: ADD_QUESTION,\r\n    payload: question\r\n  })\r\n};\r\n\r\nconst fetchAllQuestions = () => dispatch => {\r\n  dispatch(LoaderAction.showLoader());\r\n  return API._getQuestions()\r\n    .then(questions => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      dispatch(QuestionActionCreator.saveAllQuestions(questions));\r\n    })\r\n    .catch(error => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      console.warn('Error fetching all questions:', error);\r\n    });\r\n};\r\n\r\nconst addQuestion = questionInfo => dispatch => {\r\n  dispatch(LoaderAction.showLoader());\r\n\r\n  return API._saveQuestion(questionInfo)\r\n    .then(question => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      dispatch(QuestionActionCreator.addQuestion(question));\r\n    })\r\n    .catch(error => {\r\n      dispatch(LoaderAction.hideLoader());\r\n      console.warn('Error fetching all questions:', error);\r\n    });\r\n};\r\n\r\nexport const QuestionActionType = {\r\n  SAVE_ALL_QUESTIONS,\r\n  ADD_QUESTION\r\n};\r\n\r\nexport const QuestionAction = {\r\n  fetchAllQuestions,\r\n  addQuestion\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport QuestionForm from './question-form/QuestionForm';\r\nimport QuestionTitle from './question-title/QuestionTitle';\r\nimport { QuestionAction } from '../../state/actions/questions';\r\n\r\nimport './add-question.scss';\r\n\r\nclass AddQuestion extends Component {\r\n  addQuestion = question => {\r\n    const { username, addQuestion, history } = this.props;\r\n    addQuestion(question.optionOne, question.optionTwo, username);\r\n    history.push('/');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"add-question\">\r\n        <QuestionTitle />\r\n        <QuestionForm addQuestion={this.addQuestion} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  username: state.auth.username\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  addQuestion: (optionOneText, optionTwoText, author) => {\r\n    dispatch(\r\n      QuestionAction.addQuestion({\r\n        optionOneText,\r\n        optionTwoText,\r\n        author\r\n      })\r\n    );\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(AddQuestion);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Login from './login/Login';\r\nimport Navigation from './navigation/Navigation';\r\nimport Home from './home/Home';\r\nimport AddQuestion from './add-question/AddQuestion';\r\nimport { QuestionAction } from '../state/actions/questions';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchAllQuestions();\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.logged) {\r\n      return <Login />;\r\n    }\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"main-container\">\r\n          <Navigation />\r\n          <div>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/add-question\" component={AddQuestion} />\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  fetchAllQuestions: () => {\r\n    dispatch(QuestionAction.fetchAllQuestions());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  stateToProps,\r\n  dispatchToProps\r\n)(App);\r\n","import React from 'react';\r\nimport ReactLoader from 'react-loader-spinner';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './loader.scss';\r\n\r\nconst Loader = props => {\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"loader-outer\">\r\n      <div className=\"loader-inner\">\r\n        <ReactLoader type=\"Puff\" color=\"#ff474f\" height=\"100\" width=\"100\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst stateToProps = state => ({\r\n  show: state.loader\r\n});\r\n\r\nexport default connect(stateToProps)(Loader);\r\n","import { AuthActionType } from '../actions/auth';\r\n\r\nconst authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case AuthActionType.LOGIN_SUCCESS:\r\n      return loginSuccess(state, action);\r\n\r\n    case AuthActionType.LOGIN_FAIL:\r\n      return loginFail(state, action);\r\n\r\n    case AuthActionType.LOGOUT:\r\n      return logout(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loginSuccess = (state, action) => {\r\n  const username = action.payload;\r\n  const time = Date.now();\r\n  return {\r\n    logged: true,\r\n    username,\r\n    time\r\n  };\r\n};\r\n\r\nconst loginFail = (state, action) => {\r\n  const error = action.payload;\r\n  return {\r\n    logged: false,\r\n    error\r\n  };\r\n};\r\n\r\nconst logout = (state, action) => {\r\n  return {\r\n    logged: false\r\n  };\r\n};\r\n\r\nexport default authReducer;\r\n","import { LoaderActionType } from '../actions/loader';\r\n\r\nconst loaderReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case LoaderActionType.SHOW_LOADER:\r\n      return true;\r\n    case LoaderActionType.HIDE_LOADER:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loaderReducer;\r\n","import { QuestionActionType } from '../actions/questions';\r\n\r\nconst questionsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case QuestionActionType.SAVE_ALL_QUESTIONS:\r\n      return saveAllQuestions(state, action);\r\n\r\n    case QuestionActionType.ADD_QUESTION:\r\n      return addQuestion(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst saveAllQuestions = (state, action) => {\r\n  return { ...action.payload };\r\n};\r\n\r\nconst addQuestion = (state, action) => {\r\n  const question = action.payload;\r\n  return {\r\n    ...state,\r\n    [question.id]: question\r\n  };\r\n};\r\n\r\nexport default questionsReducer;\r\n","import { UserActionType } from '../actions/users';\r\n\r\nconst usersReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UserActionType.SAVE_USER:\r\n      return saveUser(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst saveUser = (state, action) => {\r\n  const user = action.payload;\r\n  return {\r\n    ...state,\r\n    [user.id]: user\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth';\r\nimport loader from './loader';\r\nimport questions from './questions';\r\nimport users from './users';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  loader,\r\n  questions,\r\n  users\r\n});\r\n","const logger = store => next => action => {\r\n  console.group(action.type);\r\n  if (action.payload !== undefined) {\r\n    console.log('Payload: ', action.payload);\r\n  }\r\n  const result = next(action);\r\n  console.log('New state: ', store.getState());\r\n  console.groupEnd();\r\n  return result;\r\n};\r\n\r\nexport default logger;\r\n","import { applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from './logger';\r\n\r\nexport default applyMiddleware(thunk, logger);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport Loader from './components/shared/loader/Loader';\r\nimport reducers from './state/reducers';\r\nimport middlewares from './state/middlewares';\r\n\r\nimport './styles/index.scss';\r\n\r\nconst store = createStore(reducers, middlewares);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Loader />\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}